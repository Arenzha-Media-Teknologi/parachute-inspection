# docker-compose.yml

version: "3.8"

services:
    #--- Layanan Aplikasi Laravel (PHP-FPM) ---#
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: laravel-app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        depends_on:
            - db
        networks:
            - laravel-network

    #--- Layanan Nginx Web Server ---#
    nginx:
        image: nginx:alpine
        container_name: laravel-nginx
        restart: unless-stopped
        ports:
            - "8000:80" # Akses dari browser via http://localhost:8000
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel-network

    #--- Layanan Database MySQL ---#
    db:
        image: mysql:8.0
        container_name: laravel-db
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            # Mengambil nilai langsung dari file .env
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # Biasanya disamakan dengan password user untuk development
        volumes:
            - db-data:/var/lib/mysql
        networks:
            - laravel-network
    #--- Layanan phpMyAdmin ---#
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: laravel-pma
        restart: unless-stopped
        ports:
            - "8081:80" # Akses dari browser via http://localhost:8081
        environment:
            PMA_HOST: db # 'db' adalah nama service database Anda
        depends_on:
            - db
        networks:
            - laravel-network

#--- Jaringan & Volume ---#
networks:
    laravel-network:
        driver: bridge

volumes:
    db-data:
        driver: local
